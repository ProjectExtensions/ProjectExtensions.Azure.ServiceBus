//===============================================================================
// Microsoft patterns & practices Enterprise Library
// Transient Fault Handling Application Block
//===============================================================================
// Copyright © Microsoft Corporation.  All rights reserved.
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY
// OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE.
//===============================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.EnterpriseLibrary.WindowsAzure.TransientFaultHandling.Propert" +
                            "ies.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection property has not been initialized..
        /// </summary>
        internal static string ConnectionHasNotBeenInitialized {
            get {
                return ResourceManager.GetString("ConnectionHasNotBeenInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The custom retry strategy type {0} does not provide a constructor taking the name identifying the retry strategy, the first fast retry flag, and a NameValueCollection for the additional properties..
        /// </summary>
        internal static string CustomRetryStrategyDoesNotProvideCorrectConstructor {
            get {
                return ResourceManager.GetString("CustomRetryStrategyDoesNotProvideCorrectConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Event Type: {1}, Event ID: {2}, Source: {3}).
        /// </summary>
        internal static string DebugTraceEventMessageFormatString {
            get {
                return ResourceManager.GetString("DebugTraceEventMessageFormatString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Information Details:.
        /// </summary>
        internal static string ExceptionDetails {
            get {
                return ResourceManager.GetString("ExceptionDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HEADER.
        /// </summary>
        internal static string ExceptionFormatterHeader {
            get {
                return ResourceManager.GetString("ExceptionFormatterHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stack Trace Information Details:.
        /// </summary>
        internal static string ExceptionStackTraceDetails {
            get {
                return ResourceManager.GetString("ExceptionStackTraceDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Summary.
        /// </summary>
        internal static string ExceptionSummary {
            get {
                return ResourceManager.GetString("ExceptionSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The action has exceeded its defined retry limit..
        /// </summary>
        internal static string ExceptionTextRetryLimitExceeded {
            get {
                return ResourceManager.GetString("ExceptionTextRetryLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception Type.
        /// </summary>
        internal static string ExceptionType {
            get {
                return ResourceManager.GetString("ExceptionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;code&gt;(\w+)&lt;/code&gt;.
        /// </summary>
        internal static string GetErrorCodeRegEx {
            get {
                return ResourceManager.GetString("GetErrorCodeRegEx", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not retrieve the retry policy configuration section..
        /// </summary>
        internal static string RetryPolicyConfigurationSectionCouldNotBeRetrieved {
            get {
                return ResourceManager.GetString("RetryPolicyConfigurationSectionCouldNotBeRetrieved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The retry strategy with name &apos;{0}&apos; cannot be found. Operation aborted..
        /// </summary>
        internal static string RetryStrategyNotFound {
            get {
                return ResourceManager.GetString("RetryStrategyNotFound", resourceCulture);
            }
        }
    }
}
